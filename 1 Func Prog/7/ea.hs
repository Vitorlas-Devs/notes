-- | Take
take' :: Int -> [a] -> [a]
take' _ [] = []
take' 0 _ = []
take' n (x : xs) = x : take' (n - 1) xs

-- take' 3 [1,2,3,4,5]
-- 1 : take' 2 [2,3,4,5]
-- 1 : 2 : take' 1 [3,4,5]
-- 1 : 2 : 3 : take' 0 [4,5]
-- 1 : 2 : 3 : []
-- [1,2,3]

-- >>> take' 10 [0..]
-- [0,1,2,3,4,5,6,7,8,9]

take'' :: Int -> [a] -> [a]
take'' n xs = [x | (i, x) <- zip [0 .. n - 1] xs]

-- take'' 3 [1,2,3,4,5]
-- [x | (i, x) <- zip [0..2] [1,2,3,4,5]]
-- [x | (i, x) <- [(0,1), (1,2), (2,3)]]
-- [1,2,3]

-- >>> take'' 10 [0..]
-- [0,1,2,3,4,5,6,7,8,9]

-- | Drop
drop' :: Int -> [a] -> [a]
drop' _ [] = []
drop' 0 xs = xs
drop' n (_ : xs) = drop' (n - 1) xs

-- drop' 3 [1,2,3,4,5]
-- drop' 2 [2,3,4,5]
-- drop' 1 [3,4,5]
-- drop' 0 [4,5]
-- [4,5]

-- >>> drop' 5 [-10..10]
-- [5,6,7,8,9,10]
drop'' :: Int -> [a] -> [a]
drop'' n xs = [x | (i, x) <- zip [0 ..] xs, i >= n]

-- drop'' 3 [1,2,3,4,5]
-- [x | (i, x) <- zip [0..] [1,2,3,4,5], i >= 3]
-- [x | (i, x) <- [(0,1), (1,2), (2,3), (3,4), (4,5)], i >= 3]
-- [x | (i, x) <- [(3,4), (4,5)], i >= 3]
-- [4,5]

-- >>> drop'' 5 [0..10]
-- [5,6,7,8,9,10]

-- | Concat

concat' :: [[a]] -> [a]
concat' [] = []
concat' (xs : xss) = xs ++ concat' xss

-- concat' xs = foldr (++) [] xs
-- concat' = foldr (++) []

-- >>> concat' [[1..10], [], [21..30]]
-- [1,2,3,4,5,6,7,8,9,10,21,22,23,24,25,26,27,28,29,30]

-- | Map

-- >>> map (^2) [1..10]
-- [1,4,9,16,25,36,49,64,81,100]

-- >>> [x | x <- [1..10]]
-- [1,4,9,16,25,36,49,64,81,100]